%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: TopDraw
%%CreationDate: Sat Feb 11 15:55:44 1995
%%For: seger
%%DocumentFonts: (atend)
%%Pages: 0 -1
%%BoundingBox: 0 0 481 413
%%EndComments

%%BeginDocument: /usr/lib/NextStep/printPackage.ps
%!PS-Adobe-2.0
%%Title: Printing Package
%%EndComments
%Version: 2.0
%Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/setcmykcolor{
	1.0 exch sub dup dup 6 -1 roll
	sub dup 0 lt{pop 0}if 5 1 roll
	4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll
	exch sub dup 0 lt{pop 0}if setrgbcolor
}__NXbdef
/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def   
/_NXfstr 128 string dup 0 (_NX) putinterval def   
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {//findfont exec}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {//findfont exec dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXProcArray 5 array __NXdef
/_NXChannels 0 __NXdef
/_NXTotalBytes 0 __NXdef
/_NXDoImageOp{
	1 index{dup}{1}ifelse /_NXChannels exch store
	_NXChannels 2 add 2 roll _NXProcArray 0 _NXChannels getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /_NXTotalBytes exch store pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{	0 1 _NXChannels 1 sub{
			_NXProcArray exch get exec
			length _NXTotalBytes exch sub /_NXTotalBytes exch store}for
		_NXTotalBytes 0 le{exit}if
	}loop /_NXProcArray 5 array def
}__NXbdef
/colorimage{_NXDoImageOp}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
%%EndDocument

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TopDrawDict 200 dict def
/xyshow {
    mark exch aload length -2 2 {
        2 roll
    } for counttomark dup 2 add -1 roll pop 1 add -1 roll gsave {
        pop pop grestore rmoveto gsave
    } exch kshow grestore rmoveto
} bind def /currentalpha {
    1
} def /setalpha {
    pop
} bind def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        currentlinewidth p2x p2y p1x p1y arow
    } if crendarw {
        currentlinewidth p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke
    } ifelse grestore
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke
        } ifelse
    } {
        pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /defpat {
    7 dict begin /FontDict 9 dict def FontDict begin /cache exch def /key exch def /proc exch cvx def /mtx exch matrix invertmatrix def /height exch def /width exch def /ctm matrix currentmatrix def /ptm matrix identmatrix def /str (12345678901234567890123456789012) def end /FontBBox [ 0 0 FontDict /width get FontDict /height get ] def /FontMatrix FontDict /mtx get def /Encoding StandardEncoding def /FontType 3 def /BuildChar {
        pop begin FontDict begin width 0 cache {
            0 0 width height setcachedevice
        } {
            setcharwidth
        } ifelse 0 0 moveto width 0 lineto width height lineto 0 height lineto closepath clip newpath gsave proc grestore end end
    } def FontDict /key get currentdict definefont end
} bind def /patpath {
    dup type /dicttype eq {
        begin unpagectm
    } {
        exch begin unpagectm concat
    } ifelse currentdict setfont FontDict begin FontMatrix concat width 0 dtransform round width div exch round width div exch 0 height dtransform round height div exch round height div exch 0 0 transform round exch round exch ptm astore setmatrix pathbbox height div ceiling height mul 4 1 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1 roll width div floor width mul 4 1 roll 2 index sub height div ceiling cvi exch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptm invertmatrix pop {
        gsave ptm concat dup str length idiv {
            str show
        } repeat dup str length mod str exch 0 exch getinterval show grestore 0 height rmoveto
    } repeat pop end end
} bind def /patfil {
    gsave clip patpath grestore newpath
} bind def /trpatfil {
    patfil
} bind def /oppatfil {
    gsave 1 setgray 1 setalpha fill grestore patfil
} bind def /trpateofil {
    pateofil
} bind def /oppateofil {
    gsave 1 setgray 1 setalpha fill grestore pateofil
} bind def /pateofil {
    gsave eoclip patpath grestore newpath
} bind def /patstrk {
    gsave strokepath clip patpath grestore newpath
} bind def /trpatstrk {
    patstrk
} bind def /oppatstrk {
    gsave 1 setgray 1 setalpha stroke grestore patstrk
} bind def /patashow {
    (0) exch {
        2 copy 0 exch put pop dup false charpath currentpoint 5 index type /dicttype eq {
            5 index patfil
        } {
            6 index 6 index patfil
        } ifelse moveto 3 copy pop rmoveto
    } forall pop pop pop dup type /dicttype ne {
        pop
    } if pop
} bind def /patshow {
    0 exch 0 exch patashow
} bind def /rpatfil {
    gsave setalpha setgray rpath tpatstr cvs cvn invpats {
        piddict exch get
    } {
        ipiddict exch get
    } ifelse findfont oppatfil grestore
} bind def /tpatstr 10 string def /getpat {
    tpatstr cvs cvn invpats {
        piddict exch get
    } {
        ipiddict exch get
    } ifelse
} bind def end
TopDrawDict begin 8 8 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 8 2 rectfill
} bind /hline1 true defpat pop 16 16 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 16 8 rectfill
} bind /hline2 true defpat pop 32 32 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 32 16 rectfill
} bind /hline3 true defpat pop 8 8 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 2 8 rectfill
} bind /vline1 true defpat pop 16 16 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 8 16 rectfill
} bind /vline2 true defpat pop 32 32 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 16 32 rectfill
} bind /vline3 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 1 setlinewidth stroke
} bind /rdline1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 3 setlinewidth stroke
} bind /rdline2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 4 setlinewidth stroke
} bind /rdline3 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 1 setlinewidth stroke
} bind /ldline1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 3 setlinewidth stroke
} bind /ldline2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 4 setlinewidth stroke
} bind /ldline3 true defpat pop 7 7 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 4 0 moveto 4 7 lineto 0 4 moveto 7 4 lineto 0.5 setlinewidth stroke
} bind /gray1 true defpat pop 11 11 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 6 0 moveto 6 11 lineto 0 6 moveto 11 6 lineto 0.5 setlinewidth stroke
} bind /gray2 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 8 0 moveto 8 15 lineto 0 8 moveto 15 8 lineto 0.5 setlinewidth stroke
} bind /gray3 true defpat pop 19 19 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 10 0 moveto 10 19 lineto 0 10 moveto 19 10 lineto 0.5 setlinewidth stroke
} bind /gray4 true defpat pop 23 23 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 12 0 moveto 12 23 lineto 0 12 moveto 23 12 lineto 0.5 setlinewidth stroke
} bind /gray5 true defpat pop 31 31 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 16 0 moveto 16 31 lineto 0 16 moveto 31 16 lineto 0.5 setlinewidth stroke
} bind /gray6 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 10 0 moveto 20 10 lineto 0 10 moveto 10 20 lineto 10 0 moveto 0 10 lineto 20 10 moveto 10 20 lineto 0.25 setlinewidth stroke
} bind /xhatch1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /xhatch2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /xhatch3 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 10 10 4 0 360 arc closepath fill
} bind /dots1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 15 15 8 0 360 arc closepath fill
} bind /dots2 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 25 25 20 0 360 arc closepath fill
} bind /dots3 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 26 moveto 50 0 rlineto 0 1 moveto 50 0 rlineto 26 50 moveto 0 -25 rlineto 1 25 moveto 0 -25 rlineto 1 setlinewidth stroke
} bind /bricks true defpat pop 25 25 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0.5 0.5 scale 0 0 25 25 rectfill 25 25 25 25 rectfill
} bind /check1 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 25 25 rectfill 25 25 25 25 rectfill
} bind /check2 true defpat pop 80 80 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 40 40 rectfill 40 40 40 40 rectfill
} bind /check3 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 10 0 moveto 20 10 lineto 10 20 lineto 0 10 lineto closepath fill
} bind /diamond1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 15 0 moveto 30 15 lineto 15 30 lineto 0 15 lineto closepath fill
} bind /diamond2 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 25 0 moveto 50 25 lineto 25 50 lineto 0 25 lineto closepath fill
} bind /diamond3 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 10 10 30 30 rectfill 0 0 moveto 50 50 lineto 0 50 moveto 50 0 lineto 1 setlinewidth stroke
} bind /weave true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 25 25 22 0 360 arc closepath 1 setlinewidth stroke
} bind /donut true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap -20 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 5 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 30 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 55 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 80 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 1 setlinewidth stroke
} bind /ziggy true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 -20 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 5 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 30 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 55 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 80 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 1 setlinewidth stroke
} bind /zaggy true defpat pop 80 80 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 0 moveto 0 40 lineto 40 40 lineto 40 80 lineto 80 80 lineto 0 60 moveto 20 60 lineto 20 80 lineto 20 0 moveto 20 20 lineto 60 20 lineto 60 60 lineto 80 60 lineto 1 setlinewidth stroke
} bind /zaggyd true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 12.5 moveto 6.25 0 rlineto 0 37.5 moveto 31.25 0 rlineto 50 12.5 moveto -31.25 0 rlineto 50 37.5 moveto -6.25 0 rlineto 12.5 0 moveto 0 6.25 rlineto 37.5 0 moveto 0 31.25 rlineto 12.5 50 moveto 0 -31.25 rlineto 37.5 50 moveto 0 -6.25 rlineto 1 setlinewidth stroke
} bind /plusses true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 10 moveto 10 0 rlineto 0 -10 rlineto 0 40 moveto 10 0 rlineto 0 10 rlineto 50 10 moveto -10 0 rlineto 0 -10 rlineto 50 40 moveto -10 0 rlineto 0 10 rlineto 7 7 moveto 36 0 rlineto 0 36 rlineto -36 0 rlineto closepath 1 setlinewidth stroke
} bind /boxes true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 50 50 40 0 360 arc closepath 40 60 moveto 0 8 rlineto 60 60 moveto 0 8 rlineto 50 45 moveto 0 8 rlineto 35 35 moveto 35 21 65 21 65 35 curveto 1 setlinewidth stroke
} bind /smiley true defpat pop /piddict 256 dict def piddict begin /1 /gray3 def /2 /gray2 def /3 /gray1 def /4 /gray6 def /5 /gray5 def /6 /gray4 def /7 /hline3 def /8 /hline2 def /9 /hline1 def /10 /vline3 def /11 /vline2 def /12 /vline1 def /13 /rdline3 def /14 /rdline2 def /15 /rdline1 def /16 /ldline3 def /17 /ldline2 def /18 /ldline1 def /19 /check3 def /20 /check2 def /21 /check1 def /22 /xhatch3 def /23 /xhatch2 def /24 /xhatch1 def /25 /dots3 def /26 /dots2 def /27 /dots1 def /28 /zaggyd def /29 /zaggy def /30 /ziggy def /31 /diamond3 def /32 /diamond2 def /33 /diamond1 def /34 /donut def /35 /weave def /36 /bricks def /37 /plusses def /38 /boxes def /39 /smiley def end /invpats true def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
%%EndSetup
gsave
0 0 480.095947 412.023987 rectclip
-38 -334.976013 translate
38 334.976013 480.095947 412.023987 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw true def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    14 getpat /crtxtpat exch def
} if
/crtxtalph 1 def
/crtxtred 0.666667 def /crtxtgrn 0.666667 def /crtxtblu 0.666667 def /txtinclr true def
/txtwpat true def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwittrans false def
/txlnwpat false def
/crfilred 0.333333 def /crfilgrn 0.333333 def /crfilblu 0.333333 def /filinclr true def
false [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] sstrt
systemdict
begin
215 450 426 637.864868 setbbox
215 558 moveto
215 558 270 619 272 620 curveto
274 621 282.440704 595.332031 293 591 curveto
297.065704 589.332031 318 622 322 621 curveto
326 620 339.160583 572.70105 349 570 curveto
358.285583 567.450989 361 590 362 590 curveto
363 590 426 492 426 492 curveto
end
/nspans 6 def splfill
false [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] sstrt
systemdict
begin
215 450 426 637.864868 setbbox
215 558 moveto
215 558 270 619 272 620 curveto
274 621 282.440704 595.332031 293 591 curveto
297.065704 589.332031 318 622 322 621 curveto
326 620 339.160583 572.70105 349 570 curveto
358.285583 567.450989 361 590 362 590 curveto
363 590 426 492 426 492 curveto
end
/nspans 6 def [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] splstroke
/crfilred 0.666667 def /crfilgrn 0.666667 def /crfilblu 0.666667 def /filinclr true def
false [0.781189 0.07365 -0.093863 0.995585 34.575909 138.827408] sstrt
systemdict
begin
103 405 650 581.143372 setbbox
103 477 moveto
103 477 139.513992 491.0383 157 505 curveto
187.888992 529.66333 198.051178 566.143311 232 580 curveto
234.801193 581.143372 244.787399 556.744507 255 545 curveto
259.787415 539.494507 267.06662 532.691162 272 534 curveto
285.44165 537.566162 294.358795 560.056763 304 558 curveto
322.483795 554.056763 329.380585 530.969849 347 518 curveto
356.380585 511.094849 365.870178 503.764648 376 505 curveto
381.245178 505.639648 384.857758 523.581909 388 523 curveto
405.107758 519.831909 412.974518 502.667969 430 495 curveto
511.224518 458.417969 507 447 507 447 curveto
end
/nspans 10 def splfill
false [0.781189 0.07365 -0.093863 0.995585 34.575909 138.827408] sstrt
systemdict
begin
103 405 650 581.143372 setbbox
103 477 moveto
103 477 139.513992 491.0383 157 505 curveto
187.888992 529.66333 198.051178 566.143311 232 580 curveto
234.801193 581.143372 244.787399 556.744507 255 545 curveto
259.787415 539.494507 267.06662 532.691162 272 534 curveto
285.44165 537.566162 294.358795 560.056763 304 558 curveto
322.483795 554.056763 329.380585 530.969849 347 518 curveto
356.380585 511.094849 365.870178 503.764648 376 505 curveto
381.245178 505.639648 384.857758 523.581909 388 523 curveto
405.107758 519.831909 412.974518 502.667969 430 495 curveto
511.224518 458.417969 507 447 507 447 curveto
end
/nspans 10 def [0.995585 0.093863 -0.093863 0.995585 12.493139 136.745453] splstroke
false [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] sstrt
systemdict
begin
241 543 276 576 setbbox
241 576 moveto
241 576 276 543 276 543 curveto
end
/nspans 1 def [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] splstroke
false [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] sstrt
systemdict
begin
314 523 334 542 setbbox
334 542 moveto
334 542 314 523 314 523 curveto
end
/nspans 1 def [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] splstroke
false [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] sstrt
systemdict
begin
291 566 315 591 setbbox
291 591 moveto
291 591 303 575 303 575 curveto
end
/nspans 1 def [0.995585 0.093863 -0.093863 0.995585 1.12616 97.505272] splstroke
1 0 0 1 0 0 sc5mt astore 397 0 38 620 1 0 0 1 0 0 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
gsave /offs [44.423996 0 56.016006 0 48.023987 0 48.023987 0 0 0] def /nof 0 def [1 0 0 1 -85 157] concat /Helvetica-Bold [ 72 1 mul 0 0 72 0 0 ] selectfont 0.5 setlinewidth txtwpat {
    crtxtpat findfont /filpat exch def
} if txlnwpat {
    crtxlnpat findfont /strpat exch def
} if newpath 127 406 moveto 1 1 (VOSS ) length {
    gsave 1 sub (VOSS ) exch 1 getinterval txtdraw {
        dup txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha gsave txtwpat {
            true charpath filpat txtwittrans {
                trpatfil
            } {
                oppatfil
            } ifelse
        } {
            show
        } ifelse grestore
    } if txlndraw {
        dup txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha true charpath txlnwpat {
            strpat txlnwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke
        } ifelse
    } if pop grestore offs nof 2 getinterval aload pop rmoveto /nof nof 2 add def
} for grestore
/txtdraw true def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txlndraw true def
(A Formal Hardware  Verification System aimed at Multi-Level Verification ) [25.991997 0 10.007999 0 21.995998 0 21.995998 0 14.004 0 32.003998 0 20.015999 0 10.007996 0 10.007996 0 25.991997 0 20.015999 0 13.283997 0 21.455994 0 28.007996 0 20.015991 0 14.003998 0 20.015991 0 10.007996 0 -335.573944 -42.839996 22.211998 0 20.015999 0 14.004 0 10.007999 0 11.988 0 10.008 0 20.015999 0 20.015999 0 11.988003 0 10.007996 0 21.996002 0 21.996002 0 10.007996 0 24.011993 0 20.016006 0 20.015991 0 11.988007 0 20.015991 0 32.003998 0 -239.18399 -42.839996 20.015999 0 10.007999 0 32.003994 0 20.015999 0 21.995995 0 10.007996 0 20.016006 0 11.988007 0 -267.461975 -42.839996 29.987999 0 21.995998 0 10.007999 0 11.987999 0 10.007999 0 11.988 0 21.995998 0 19.475998 0 20.015999 0 20.015999 0 10.008003 0 7.127998 0 22.211998 0 20.015991 0 14.003998 0 10.007996 0 11.988007 0 10.007996 0 20.015991 0 20.015991 0 11.988007 0 10.007996 0 21.996002 0 21.996002 0 0 0] -69.415985 369 /Helvetica-Bold [ 36 1 mul 0 0 36 0 0 ] [1 0 0 1 226 95] dotx
end
grestore
grestore
%%Trailer
