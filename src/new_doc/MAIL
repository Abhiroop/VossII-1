Finally....  the first more general release of the Voss formal hardware
verification system is finally happening...

Your name is on my (by now fairly lengthy) list of people that
at one time or another asked to be put on the mailing list for
the Voss system.  Well, I have finally decided that, for better or
worse, this is going to be version 1.5 of the Voss system.

Consequently, the binaries for a number of architectures, a fairly
lengthy user's reference guide (73 pages), and a fairly full set
of demos (all 5MBytes of them) have been placed on ftp.cs.ubc.ca
in the directory  /ftp/pickup/seger/voss

For your convenience, the distribution is split up in three pieces:
  1) userguide.ps.Z  (gives you some idea of what the system can do)
  2) demos.tar.Z  (gives a number of relatively large examples to show
                   typical eamples of using the system)
  3) binaries+library functions for
        Sparc, HP, IBM RS6000, Mips SGI, and NeXT machines.

Below, I've included the README file from /ftp/pickup/seger/voss

If you have any questions or experiencing some difficulties getting
the programs to run or to install them, feel free to send me
an email. The same holds if you're running a machine/OS combination
that is not on the list above... We'll talk...

Finally, if you want to stay on a mailing list for the Voss system
(announcements but also questions and answers), please send me a
request and I'll put you on.

       -- Carl

---------------------------- README ----------------------------

HOW TO GET THIS:
================

ftp ftp.cs.ubc.ca
login: anonymous
password: (send complete email address as password)

cd /ftp/pickup/seger/voss

README		--- This file
userguide.ps.Z	--- Compressed Postscript file for user documentation
demo.tar.Z	--- Compressed tar file of a demo directory
HP.tar.Z:	--- Binary and FL library for HP machines
IBM6000.tar.Z:	--- Binary and FL library for IBM RS6000  machines
MipsSGI.tar.Z:	--- Binary and FL library for Mips/SGI machines
NeXT.tar.Z:	--- Binary and FL library for NeXT machines
SunSparc.tar.Z:	--- Binary and FL library for Sun Sparc machines

For more details on OS version, see below.

-----------------------------------------------------------------------------

WHAT IS THIS?
==============

This is the alpha replease of the Voss system (version 1.5).
It consists of three components:

   1) A user's guide/reference guide distributed as a compressed
      Postscript file. The guide is also available as Technical Report
      CS-93-45 from the Department of Computer Science, University of British
      Columbia. The guide is over 70 pages long and contains also
      a tutorial for using the system for formal hardware verification.
	DICLAIMER: The guide is still quite ``rough'' and as time permits,
		   new, more polished, versions will replace this one.

   2) A compressed tar file of a demo directory that contains
      circuit examples and verification script for the following circuits:

	AMD2901		= A behavioral and a structural description of
			  an AMD 2901 circuit including complete verification
			  of both.
	AgreaterB	= A behavioral VHDL descirption and a switch-level
			  model of a circuit computing A>B>0. The switch-level
			  model uses pre-charged domino CMOS design style.
			  Also included is a verification script that can be
			  used to compare combinational logic (even in the
			  presence of clocks and dynamic logic).
	Binary2BCD	= A structural VHDL description of a circuit that
			  converts an 8-bit binary number to three BCD digits.
			  The verification shows how to use relational
			  specifications.
	Full_adder	= Example of Silos II gate list of a simple full adder.
			  Also included is a simple verification script.
	MC_stack	= NMOS switch-level implementation of a 64 bit wide and
			  4 bit deep stack as described in Mead and Conway
			  Includes a complete verification script as well.
	McMillan	= Pipelined datapath that uses a non-pipelined
			  specification. The circuit is implemented at the
			  switch-level and has a dual-ported register file,
			  an 18(?) instructions ALU, and a four stage pipeline
			  with bypass logic. Includes a complete verification
			  script. There is a precompiled version for 4X4 and
			  a 32X32 version as well.
			  The latter takes approximately 45 minutes to run on
			  a Sparc 10/51 with 64Mbyte of memory.
	ModelChecking	= An example of how concise a symbolic model-checker
			  for CTL can be defined in FL.
	Tamarack3	= An 8-bit version of the Tamarack III processor
			  implemented at the switch-level with a mixture of
			  dynamic and static logic. Includes a complete
		 	  verification script.
	UART		= A structural VHDL implementation of a programmable
			  UART circuit. Includes a partial specification
			  script (verifies the receiver).

   3) A compressed tar file that contains the binaries and the library files
      for the following architecture/OS combinations:

	HP.tar.Z:	Compiled and tested on an HP 9000/720 running
			HP-UX Release: A.09.01  Version: A 

	IBM6000.tar.Z:	Compiled and tested on an IBM RS6000 model
			7013/560 running AIX Version: 3, Release: 2 

	MipsSGI.tar.Z:	Compiled and tested on an SGI Crimson running
			IRIX Release 4.0.5C System V

	NeXT.tar.Z:	Compiled and tested on a NeXT Station (68040) machine
			running NeXT-OS 2.1a

	SunSparc.tar.Z:	Compiled and tested on a Sparc 10/51 dual processor
			machine running SunOS, Revision: 4.1.3, Version 3 



-----------------------------------------------------------------------------

DISK SPACE REQUIREMENTS
========================

The execuatble and library files require less than 1.8 Mbyte of disk storage.
[The only exception is the CISC 68040 machine taht only requires 1/3 of that!]

The demo directory requires just shy of 5.2 Mbyte of disk space

The user_guide.ps is just over 1/2 MByte.



-----------------------------------------------------------------------------

INSTALLATION
============

1) ftp the chosen binaries (don't forget to set the file type to binary!).

2) zcat XXXX.tar.Z | tar xvf -   
   will extract a directory called voss with two subdirectories bin and vosslib.

3) Put the bin directory on your search path (or make aliases for the 5
   executables).

4) Make a file called .vossrc in your home directory that contains a single
   line:

 VOSS-LIBRARY-DIRECTORY=absolute_path_to_where_you_installed_voss/voss/vosslib



To get the demos and user-guide, ftp it over and extract it.

-----------------------------------------------------------------------------

WARRANTIES:
===========

This is a research tool and as such may very well contain bugs.
I do not warrant anything about the programs or anything else
for that matter...

-----------------------------------------------------------------------------

LICENCE:
========

This distribution is for INTERNAL USE ONLY.
Please do not re-distribute it without my permission.
I'd would really like to keep track of who's got it and so on...

-----------------------------------------------------------------------------

FINALLY:
========

If you find the tool useful, have questions, comments, etc.
feel free to send me email. I'll be continuing to use the
system and update it and its various documentation.

Also, I have several students that are using it for verifying much more
complex designs. Once these efforts have been concluded, these circuits
will also be included in the demo directory.

      --- Carl Seger, December 6, 1993
          seger@cs.ubc.ca
