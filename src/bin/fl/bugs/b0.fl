load "bool_arithm.fl";
//load "bexpr_arithm.fl";

let SZ = 11;	// Enough for unsigned numbers <= 1023

let DSZ = 2*SZ;

// Pick an example p
let p = 1009;
let pv = int2fbv DSZ p;

let as = md_expand_vector (sprintf "a[%d:0]" (SZ-2));
let bs = md_expand_vector (sprintf "b[%d:0]" (SZ-2));

var_order (interleave [as,bs]);
update_vossrc "DYNAMIC-ORDERING" "NO";

let av = ZX DSZ (map variable as);
let bv = ZX DSZ (map variable bs);

let mres = ZX DSZ (fbvmult av bv);
time (mres fseq 1);

let spec =
    let mres = ZX DSZ (fbvmult av bv) in
    fbvmod mres pv
;

time (spec fseq 2);
bdd_size spec;

quit;
