//-------------------------------------------------------------------
// Copyright 2020 Carl-Johan Seger
// SPDX-License-Identifier: Apache-2.0
//-------------------------------------------------------------------


let iadd {a::int} {b::int} = a+b;
let sadd {a::string} {b::string} = a^b;

overload add iadd sadd;

add 1 2;
add "a" "b";


let fadd {a::float} {b::float} = a + b;

overload nadd add fadd;

rvariable "aaaaa";
nadd 1 2;
nadd "a" "b";
nadd 2.1 3.0;


let isub a b = {a::int}-b;
let fsub a b = {a::float}-b;
let ssub s1 s2 = s1 ^ s2;

overload sub isub fsub ssub;

sub 5 1;
sub 3.9 2.4;
sub "abc" "d";









let idouble x = 2*x;
let fdouble x = 2.0*x;
let rdouble i = 7.1*(int2float i);
let isdouble s = 2*(sscanf "%b" s);



1111111111;
open_overload foo;
let f x y = foo x + foo y;
let g x = f x x;
add_open_overload foo idouble;
add_open_overload foo fdouble;
add_open_overload foo rdouble;
add_open_overload foo isdouble;
1, (g 1.4);
2, (g "1");
3, ((g 1)+0);
4, ((g 1)+0.3);

222222222;
open_overload foo;
add_open_overload foo idouble;
add_open_overload foo fdouble;
add_open_overload foo rdouble;
add_open_overload foo isdouble;
let f x y = foo x + foo y;
let g x = f x x;
1, (g 1.4);
2, (g "1");
3, ((g 1)+0);
4, ((g 1)+0.3);


33333333;
open_overload foo;
add_open_overload foo idouble;
let f x y = foo x + foo y;
let g x = f x x;
add_open_overload foo fdouble;
add_open_overload foo rdouble;
add_open_overload foo isdouble;
1, (g 1.4);
2, (g "1");
3, ((g 1)+0);
4, ((g 1)+0.3);


